name: CI

on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  test-all:
    name: Test All (${{ matrix.os }} / ghc ${{ matrix.ghc }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        cabal: ["3.6"]
        # The GHC versions should include all versions of GHC that package
        # this version of Haddock.
        ghc: ["9.2.1", "9.2.2"]

    steps:
    - uses: actions/checkout@v2

    - uses: haskell/actions/setup@v1
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    # GitHub preinstalls recent GHC versions, and haskell/actions/setup uses the
    # preinstalled version when possible. However, GitHub's preinstalled GHC does
    # not include documentation, and we need documentation to run Haddock tests.
    # Therefore, we reinstall GHC to ensure that we have the documentation we
    # need.

    # TODO: Only reinstall GHC when the docs are actually missing. (If we're
    # using a GHC version that is not preinstalled by GitHub, then we will be
    # using a GHC installed by ghcup, which should have documentation.)
    - name: Reinstall GHC with docs
      run: |
        ghcup rm ghc ${{ matrix.ghc }}
        ghcup install ghc ${{ matrix.ghc }}
 
    - uses: actions/cache@v2
      name: Cache ~/.cabal/store
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Build
      run: |
        cabal configure --enable-tests --test-show-details=streaming
        cabal build all

    - name: Make test output directory
      id: make-test-output-dir
      run: |
        mkdir -p ${{ github.workspace }}/test-output

    - name: Test
      run: cabal test all --test-log='${{ github.workspace }}/test-output/$pkgid-$compiler-$os-$arch-$test-suite-$result.txt'

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      if: always() && steps.make-test-output-dir.conclusion == 'success'
      with:
        name: test-output
        path: ${{ github.workspace }}/test-output/



  test-haddock-library:
    name: Test Haddock Library (${{ matrix.os }} / ghc ${{ matrix.ghc }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        cabal: ["3.6"]
        # The GHC versions should match the versions specified in
        # the 'tested-with' section of haddock-library.cabal.
        ghc: ["7.10.3", "8.4.4", "8.6.5", "8.8.3", "8.10.1", "9.0.1", "9.2.1"]
    defaults:
      run:
        working-directory: ./haddock-library

    steps:
    - uses: actions/checkout@v2

    - uses: haskell/actions/setup@v1
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
 
    - uses: actions/cache@v2
      name: Cache ~/.cabal/store
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Build
      run: |
        cabal configure --enable-tests --test-show-details=streaming
        cabal build all

    - name: Make test output directory
      id: make-test-output-dir
      run: |
        mkdir -p ${{ github.workspace }}/test-output

    - name: Test
      run: cabal test all --test-log='${{ github.workspace }}/test-output/$pkgid-$compiler-$os-$arch-$test-suite-$result.txt'

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      if: always() && steps.make-test-output-dir.conclusion == 'success'
      with:
        name: test-output
        path: ${{ github.workspace }}/test-output/
